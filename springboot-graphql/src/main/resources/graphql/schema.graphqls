schema {
    query: Query
    mutation: Mutation
}

type Query {
    getAuthorById(id: Int!) : Author
    getAuthorByEmail(email: Email!) : Author
    getBook: Book
    allBooks: [Book]
    today: Date
    getThreeDays: ThreeDays
}

type Mutation {
    addEmail(email: Email!) : Author
    addAuthor(author: ArgumentAuthor!) : Author
    setDay(day: Date): Date
    setThreeDays(threeDays: ThreeDaysInput): ThreeDays
}

type Author {
    id: Int!
    name: String!
    email: Email
}

type Book {
    id: Int!
    name: String!
    author: Author!
}

type ThreeDays {
    tommorow: Date!
    today: Date!
    yesterday: Date!
}

input ArgumentAuthor {
    name: String!
    email: Email
}

input ThreeDaysInput {
    # TODO : Date(LocalDate)だとエラーになる
    today: Date!
}

scalar Email
scalar Date
